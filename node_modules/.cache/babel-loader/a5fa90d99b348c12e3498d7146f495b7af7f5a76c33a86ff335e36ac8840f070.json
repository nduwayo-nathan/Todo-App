{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\nvar _options = require(\"./options\");\nvar _string = require(\"./string\");\nvar _literal = require(\"./literal\");\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign(function (tpl) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: function (tpl) {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n        return builder(args)();\n      }\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","map":{"version":3,"names":["_options","require","_string","_literal","NO_PLACEHOLDER","validate","placeholderPattern","createTemplateBuilder","formatter","defaultOpts","templateFnCache","WeakMap","templateAstCache","cachedOpts","Object","assign","tpl","_len","arguments","length","args","Array","_key","Error","extendedTrace","default","merge","isArray","builder","get","set","ast","_len2","_key2","fn","rootStack","error","stack","split","slice","join","arg","err"],"sources":["/home/nathan/Documents/project/node_modules/@babel/template/src/builder.ts"],"sourcesContent":["import { merge, validate } from \"./options\";\nimport type { TemplateOpts, PublicOpts, PublicReplacements } from \"./options\";\nimport type { Formatter } from \"./formatters\";\n\nimport stringTemplate from \"./string\";\nimport literalTemplate from \"./literal\";\n\nexport type TemplateBuilder<T> = {\n  // Build a new builder, merging the given options with the previous ones.\n  (opts: PublicOpts): TemplateBuilder<T>;\n\n  // Building from a string produces an AST builder function by default.\n  (tpl: string, opts?: PublicOpts): (replacements?: PublicReplacements) => T;\n\n  // Building from a template literal produces an AST builder function by default.\n  (tpl: TemplateStringsArray, ...args: Array<unknown>): (\n    replacements?: PublicReplacements,\n  ) => T;\n\n  // Allow users to explicitly create templates that produce ASTs, skipping\n  // the need for an intermediate function.\n  ast: {\n    (tpl: string, opts?: PublicOpts): T;\n    (tpl: TemplateStringsArray, ...args: Array<unknown>): T;\n  };\n};\n\n// Prebuild the options that will be used when parsing a `.ast` template.\n// These do not use a pattern because there is no way for users to pass in\n// replacement patterns to begin with, and disabling pattern matching means\n// users have more flexibility in what type of content they have in their\n// template JS.\nconst NO_PLACEHOLDER: TemplateOpts = validate({\n  placeholderPattern: false,\n});\n\nexport default function createTemplateBuilder<T>(\n  formatter: Formatter<T>,\n  defaultOpts?: TemplateOpts,\n): TemplateBuilder<T> {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || validate(null);\n\n  return Object.assign(\n    ((tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return extendedTrace(\n          stringTemplate(formatter, tpl, merge(cachedOpts, validate(args[0]))),\n        );\n      } else if (Array.isArray(tpl)) {\n        let builder = templateFnCache.get(tpl);\n        if (!builder) {\n          builder = literalTemplate(formatter, tpl, cachedOpts);\n          templateFnCache.set(tpl, builder);\n        }\n        return extendedTrace(builder(args));\n      } else if (typeof tpl === \"object\" && tpl) {\n        if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n        return createTemplateBuilder(\n          formatter,\n          merge(cachedOpts, validate(tpl)),\n        );\n      }\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }) as TemplateBuilder<T>,\n    {\n      ast: (tpl: string | Array<string>, ...args: Array<unknown>) => {\n        if (typeof tpl === \"string\") {\n          if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n          return stringTemplate(\n            formatter,\n            tpl,\n            merge(merge(cachedOpts, validate(args[0])), NO_PLACEHOLDER),\n          )();\n        } else if (Array.isArray(tpl)) {\n          let builder = templateAstCache.get(tpl);\n          if (!builder) {\n            builder = literalTemplate(\n              formatter,\n              tpl,\n              merge(cachedOpts, NO_PLACEHOLDER),\n            );\n            templateAstCache.set(tpl, builder);\n          }\n          return builder(args)();\n        }\n\n        throw new Error(`Unexpected template param ${typeof tpl}`);\n      },\n    },\n  );\n}\n\nfunction extendedTrace<Arg, Result>(\n  fn: (_: Arg) => Result,\n): (_: Arg) => Result {\n  // Since we lazy parse the template, we get the current stack so we have the\n  // original stack to append if it errors when parsing\n  let rootStack = \"\";\n  try {\n    // error stack gets populated in IE only on throw\n    // (https://msdn.microsoft.com/en-us/library/hh699850(v=vs.94).aspx)\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      // error.stack does not exists in IE <= 9\n      // We slice off the top 3 items in the stack to remove the call to\n      // 'extendedTrace', and the anonymous builder function, with the final\n      // stripped line being the error message itself since we threw it\n      // in the first place and it doesn't matter.\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return (arg: Arg) => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}